{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Nom de l'espace de travail",
			"defaultValue": "synapslabo"
		},
		"ServelessSQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Chaîne sécurisée pour « connectionString » de « ServelessSQLDB »",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=synapslabo-ondemand.sql.azuresynapse.net;Initial Catalog=GOLD_DB"
		},
		"synapslabo-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Chaîne sécurisée pour « connectionString » de « synapslabo-WorkspaceDefaultSqlServer »",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:synapslabo.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"synapslabo-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakelabo4.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/create vieux')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Tables names",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "goldtables",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach table name",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Tables names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Tables names').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[CreatesQLServerlessView_gold]",
										"storedProcedureParameters": {
											"ViewName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ServelessSQLDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/goldtables')]",
				"[concat(variables('workspaceId'), '/linkedServices/ServelessSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/goldtables')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapslabo-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "SalesLT",
						"fileSystem": "gold"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapslabo-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ServelessSQLDB')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ServelessSQLDB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapslabo-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapslabo-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapslabo-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapslabo-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLQuery1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "USE GOLD_DB\nGO\nCREATE OR ALTER PROC CreatesQLServerlessView_gold \n@ViewName nvarchar(100) \nAS \nBEGIN\n    DECLARE @statement VARCHAR(MAX) \n    SET @statement = N'CREATE OR ALTER VIEW ' + @ViewName + ' AS \n    SELECT * FROM OPENROWSET \n    (BULK ''https://mrkdatalakegen2.dfs.core.windows.net/gold/SalesLT/' + @ViewName + '/'', FORMAT = ''DELTA'') AS [result]'\n    EXEC (@statement)\nEND\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "GOLD_DB",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateVieuxSynaps')]",
			"type": "Microsoft.Synapse/workspaces/sparkConfigurations",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"configs": {
					"USE": "gold_db;",
					"CREATE": "OR ALTER PROCEDURE CreatesQLServerlessView_gold (",
					"@ViewName": "@ViewName NVARCHAR(100),",
					"@DataLakeUrl": "@DataLakeUrl NVARCHAR(MAX) = N'https://datalakelabo4.dfs.core.windows.net/gold/SalesLT/'",
					"WITH": "EXECUTE AS CALLER",
					"DECLARE": "DECLARE @statement NVARCHAR(MAX);",
					"SET": "SET @statement = N'CREATE OR ALTER VIEW ' + @ViewName + N' AS",
					"SELECT": "SELECT * FROM OPENROWSET (BULK @DataLakeUrl + @ViewName + N'''', FORMAT = ''DELTA'') as [result]';",
					"EXEC": "EXEC sp_executesql @statement;"
				},
				"created": "2024-05-21T22:00:04.4310000+02:00",
				"createdBy": "sirinebeloucif6@gmail.com",
				"configMergeRule": {
					"artifact.currentOperation.USE": "replace",
					"artifact.currentOperation.CREATE": "replace",
					"artifact.currentOperation.@ViewName": "replace",
					"artifact.currentOperation.@DataLakeUrl": "replace",
					"artifact.currentOperation.WITH": "replace",
					"artifact.currentOperation.DECLARE": "replace",
					"artifact.currentOperation.SET": "replace",
					"artifact.currentOperation.SELECT": "replace",
					"artifact.currentOperation.EXEC": "replace"
				}
			},
			"dependsOn": []
		}
	]
}